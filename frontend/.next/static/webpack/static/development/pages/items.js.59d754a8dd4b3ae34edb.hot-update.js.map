{"version":3,"file":"static/webpack/static/development/pages/items.js.59d754a8dd4b3ae34edb.hot-update.js","sources":["webpack:///./components/DeleteItem.js","webpack:///./components/Item.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { Mutation } from 'react-apollo';\nimport gql from 'graphql-tag';\nimport { ALL_ITEMS_QUERY } from './Items';\n\nconst DELETE_ITEM_MUTATION = gql`\n  mutation DELETE_ITEM_MUTATION($id: ID!) {\n    deleteItem(id: $id) {\n      id\n    }\n  }\n`;\n\nclass DeleteItem extends Component {\n  update = (cache, payload) => {\n    // manually update the cache on the client, so it matches the server\n    // 1. Read the cache for the items we want\n    const data = cache.readQuery({ query: ALL_ITEMS_QUERY });\n    console.log(data, payload);\n    // 2. Filter the deleted item out of the page\n    data.items = data.items.filter(item => item.id !== payload.data.deleteItem.id);\n    // 3. Put the items back!\n    cache.writeQuery({ query: ALL_ITEMS_QUERY, data });\n  };\n  render() {\n    return (\n      <Mutation\n        mutation={DELETE_ITEM_MUTATION}\n        variables={{ id: this.props.id }}\n        update={this.update}\n      >\n        {(deleteItem, { error }) => (\n          <button\n            onClick={() => {\n              if (confirm('Are you sure you want to delete this item?')) {\n                deleteItem();\n              }\n            }}\n          >\n            {this.props.children}\n          </button>\n        )}\n      </Mutation>\n    );\n  }\n}\n\nexport default DeleteItem;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Link from 'next/link';\nimport formatMoney from '../lib/formatMoney';\nimport Title from './styles/Title';\nimport ItemStyles from './styles/ItemStyles';\nimport PriceTag from './styles/PriceTag';\nimport DeleteItem from './DeleteItem';\n\nexport default class Item extends Component {\n  static propTypes = {\n    item: PropTypes.object.isRequired,\n  };\n\n  render() {\n    const { item } = this.props;\n    return (\n      <ItemStyles>\n        {item.image && <img src={item.image} alt={item.title} />}\n\n        <Title>\n          <Link\n            href={{\n              pathname: '/item',\n              query: { id: item.id },\n            }}\n          >\n            <a>{item.title}</a>\n          </Link>\n        </Title>\n        <PriceTag>{formatMoney(item.price)}</PriceTag>\n        <p>{item.description}</p>\n\n        <div className=\"buttonList\">\n          <Link\n            href={{\n              pathname: 'update',\n              query: { id: item.id },\n            }}\n          >\n            <a>Edit ✏️</a>\n          </Link>\n          <button>Add To Cart</button>\n          <DeleteItem id={item.id}>Delete This Item</DeleteItem>\n        </div>\n      </ItemStyles>\n    );\n  }\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAEA;AACA;AAOA;;;;;;;;;;;;;;;;;;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;;;;;;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AAAA;AAAA;AACA;AAHA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAEA;AACA;AACA;AACA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAaA;;;;AA/BA;AACA;AAiCA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AAKA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAFA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAFA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;AAtCA;AACA;AADA;AAEA;AADA;AACA;;;;;A","sourceRoot":""}