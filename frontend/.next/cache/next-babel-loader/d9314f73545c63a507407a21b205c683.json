{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  query {\\n    users {\\n      id\\n      name\\n      email\\n      permissions\\n    }\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation updatePermissions($permissions: [Permission], $userId: ID!) {\\n    updatePermissions(permissions: $permissions, userId: $userId) {\\n      id\\n      permissions\\n      name\\n      email\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { Query, Mutation } from 'react-apollo';\nimport Error from './ErrorMessage';\nimport gql from 'graphql-tag';\nimport Table from './styles/Table';\nimport StyleButton from './styles/StyleButton';\nvar possiblePermissions = ['ADMIN', 'USER', 'ITEMCREATE', 'ITEMUPDATE', 'ITEMDELETE', 'PERMISSIONUPDATE'];\nvar UPDATE_PERMISSIONS_MUTATION = gql(_templateObject());\nvar ALL_USERS_QUERY = gql(_templateObject2());\n\nvar Permissions = function Permissions(props) {\n  return __jsx(Query, {\n    query: ALL_USERS_QUERY\n  }, function (_ref) {\n    var data = _ref.data,\n        loading = _ref.loading,\n        error = _ref.error;\n    return __jsx(\"div\", null, __jsx(Error, {\n      error: error\n    }), __jsx(\"div\", null, __jsx(\"h2\", null, \"Manage Permissions\"), __jsx(Table, null, __jsx(\"thead\", null, __jsx(\"tr\", null, __jsx(\"th\", null, \"Name\"), __jsx(\"th\", null, \"Email\"), possiblePermissions.map(function (permission) {\n      return __jsx(\"th\", {\n        key: permission\n      }, permission);\n    }), __jsx(\"th\", null, \"\\uD83D\\uDC47\\uD83C\\uDFFB\"))), __jsx(\"tbody\", null, data.users.map(function (user) {\n      return __jsx(UserPermissions, {\n        user: user,\n        key: user.id\n      });\n    })))));\n  });\n};\n\nvar UserPermissions =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(UserPermissions, _React$Component);\n\n  function UserPermissions() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, UserPermissions);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(UserPermissions)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      permissions: _this.props.user.permissions\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handlePermissionChange\", function (event) {\n      var checkbox = event.target; // take a copy of the current permissions\n\n      var updatedPermissions = _toConsumableArray(_this.state.permissions); // figure out if we need to remove or add this permission\n\n\n      if (checkbox.checked) {\n        // add it in!\n        updatedPermissions.push(checkbox.value);\n      } else {\n        updatedPermissions = updatedPermissions.filter(function (permission) {\n          return permission !== checkbox.value;\n        });\n      }\n\n      _this.setState({\n        permissions: updatedPermissions\n      });\n\n      console.log(updatedPermissions);\n    });\n\n    return _this;\n  }\n\n  _createClass(UserPermissions, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var user = this.props.user;\n      return __jsx(Mutation, {\n        mutation: UPDATE_PERMISSIONS_MUTATION,\n        variables: {\n          permissions: this.state.permissions,\n          userId: this.props.user.id\n        }\n      }, function (updatePermissions, _ref2) {\n        var loading = _ref2.loading,\n            error = _ref2.error;\n        return __jsx(React.Fragment, null, error && __jsx(\"tr\", null, __jsx(\"td\", {\n          colspan: \"10\"\n        }, __jsx(Error, {\n          error: error\n        }))), __jsx(\"tr\", null, __jsx(\"td\", null, user.name), __jsx(\"td\", null, user.email), possiblePermissions.map(function (permission) {\n          return __jsx(\"td\", {\n            key: permission\n          }, __jsx(\"label\", {\n            htmlFor: \"\".concat(user.id, \"-permission-\").concat(permission)\n          }, __jsx(\"input\", {\n            id: \"\".concat(user.id, \"-permission-\").concat(permission),\n            type: \"checkbox\",\n            checked: _this2.state.permissions.includes(permission),\n            value: permission,\n            onChange: _this2.handlePermissionChange\n          })));\n        }), __jsx(\"td\", null, __jsx(StyleButton, {\n          type: \"button\",\n          disabled: loading,\n          onClick: updatePermissions\n        }, \"Updat\", loading ? 'ing' : 'e'))));\n      });\n    }\n  }]);\n\n  return UserPermissions;\n}(React.Component);\n\nexport default Permissions;","map":null,"metadata":{},"sourceType":"module"}