{"ast":null,"code":"var _jsxFileName = \"/Users/cihadsaglam/wesbos/style-case/frontend/components/OrderList.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { Query } from 'react-apollo';\nimport { formatDistance } from 'date-fns';\nimport Link from 'next/link';\nimport styled from 'styled-components';\nimport gql from 'graphql-tag';\nimport Error from './ErrorMessage';\nimport formatMoney from '../lib/formatMoney';\nimport OrderItemStyles from './styles/OrderItemStyles';\nconst USER_ORDERS_QUERY = gql`\n  query USER_ORDERS_QUERY {\n    orders(orderBy: createdAt_DESC) {\n      id\n      total\n      createdAt\n      items {\n        id\n        title\n        price\n        description\n        quantity\n        image\n      }\n    }\n  }\n`;\nconst orderUl = styled.ul.withConfig({\n  displayName: \"OrderList__orderUl\",\n  componentId: \"sc-7em6xg-0\"\n})([\"display:grid;grid-gap:4rem;grid-template-columns:repeat(auto-fit,minmax(40%,1fr));\"]);\n\nclass OrderList extends React.Component {\n  render() {\n    return __jsx(Query, {\n      query: USER_ORDERS_QUERY,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, ({\n      data: {\n        orders\n      },\n      loading,\n      error\n    }) => {\n      if (loading) return __jsx(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"loading...\");\n      if (error) return __jsx(Error, {\n        erorr: error,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      });\n      console.log(orders);\n      return __jsx(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, __jsx(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"You have \", orders.length, \" orders\"), __jsx(\"orderUl\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, orders.map(order => __jsx(OrderItemStyles, {\n        key: order.id,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, __jsx(Link, {\n        href: {\n          pathname: '/order',\n          query: {\n            id: order.id\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, __jsx(\"a\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, __jsx(\"div\", {\n        className: \"order-meta\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, __jsx(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, order.items.reduce((a, b) => a + b.quantity, 0), \" Items\"), __jsx(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, order.items.length, \" Products\"), __jsx(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, formatDistance(order.createdAt, new Date(), {\n        addSuffix: true\n      })), __jsx(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, formatMoney(order.total))), __jsx(\"div\", {\n        className: \"images\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, order.items.map(item => __jsx(\"img\", {\n        key: item.id,\n        src: item.image,\n        alt: item.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      })))))))));\n    });\n  }\n\n}\n\nexport default OrderList;","map":{"version":3,"sources":["/Users/cihadsaglam/wesbos/style-case/frontend/components/OrderList.js"],"names":["React","Query","formatDistance","Link","styled","gql","Error","formatMoney","OrderItemStyles","USER_ORDERS_QUERY","orderUl","ul","OrderList","Component","render","data","orders","loading","error","console","log","length","map","order","id","pathname","query","items","reduce","a","b","quantity","createdAt","Date","addSuffix","total","item","image","title"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Query } from 'react-apollo';\nimport { formatDistance } from 'date-fns';\nimport Link from 'next/link';\nimport styled from 'styled-components';\nimport gql from 'graphql-tag';\nimport Error from './ErrorMessage';\nimport formatMoney from '../lib/formatMoney';\nimport OrderItemStyles from './styles/OrderItemStyles';\n\nconst USER_ORDERS_QUERY = gql`\n  query USER_ORDERS_QUERY {\n    orders(orderBy: createdAt_DESC) {\n      id\n      total\n      createdAt\n      items {\n        id\n        title\n        price\n        description\n        quantity\n        image\n      }\n    }\n  }\n`;\n\nconst orderUl = styled.ul`\n  display: grid;\n  grid-gap: 4rem;\n  grid-template-columns: repeat(auto-fit, minmax(40%, 1fr));\n`;\n\nclass OrderList extends React.Component {\n  render() {\n    return (\n      <Query query={USER_ORDERS_QUERY}>\n        {({ data: { orders }, loading, error }) => {\n          if (loading) return <p>loading...</p>;\n          if (error) return <Error erorr={error} />;\n          console.log(orders);\n          return (\n            <div>\n              <h2>You have {orders.length} orders</h2>\n              <orderUl>\n                {orders.map(order => (\n                  <OrderItemStyles key={order.id}>\n                    <Link\n                      href={{\n                        pathname: '/order',\n                        query: { id: order.id },\n                      }}\n                    >\n                      <a>\n                        <div className=\"order-meta\">\n                          <p>{order.items.reduce((a, b) => a + b.quantity, 0)} Items</p>\n                          <p>{order.items.length} Products</p>\n                          <p>{formatDistance(order.createdAt, new Date(), {\n                            addSuffix: true\n                          })}</p>\n                          <p>{formatMoney(order.total)}</p>\n                        </div>\n                        <div className=\"images\">\n                          {order.items.map(item => (\n                            <img key={item.id} src={item.image} alt={item.title} />\n                          ))}\n                        </div>\n                      </a>\n                    </Link>\n                  </OrderItemStyles>\n                ))}\n              </orderUl>\n            </div>\n          );\n        }}\n      </Query>\n    );\n  }\n}\n\nexport default OrderList;"]},"metadata":{},"sourceType":"module"}