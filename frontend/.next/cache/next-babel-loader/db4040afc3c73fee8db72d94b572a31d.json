{"ast":null,"code":"import withApollo from 'next-with-apollo';\nimport ApolloClient from 'apollo-boost';\nimport { endpoint } from '../config';\nimport { LOCAL_STATE_QUERY } from '../components/Cart';\n\nfunction createClient(_ref) {\n  var headers = _ref.headers;\n  return new ApolloClient({\n    uri: true ? endpoint : endpoint,\n    request: function request(operation) {\n      operation.setContext({\n        fetchOptions: {\n          credentials: 'include'\n        },\n        headers: headers\n      });\n    },\n    // local data\n    clientState: {\n      resolvers: {\n        Mutation: {\n          toggleCart: function toggleCart(_, variables, _ref2) {\n            var cache = _ref2.cache;\n\n            // read the cartOpen value from the cache\n            var _cache$readQuery = cache.readQuery({\n              query: LOCAL_STATE_QUERY\n            }),\n                cartOpen = _cache$readQuery.cartOpen; // Write the cart State to the opposite\n\n\n            var data = {\n              data: {\n                cartOpen: !cartOpen\n              }\n            };\n            cache.writeData(data);\n            return data;\n          }\n        }\n      },\n      defaults: {\n        cartOpen: false\n      }\n    }\n  });\n}\n\nexport default withApollo(createClient, {\n  getDataFromTree: 'never'\n});","map":{"version":3,"sources":["/Users/cihadsaglam/wesbos/style-case/frontend/lib/withData.js"],"names":["withApollo","ApolloClient","endpoint","LOCAL_STATE_QUERY","createClient","headers","uri","request","operation","setContext","fetchOptions","credentials","clientState","resolvers","Mutation","toggleCart","_","variables","cache","readQuery","query","cartOpen","data","writeData","defaults","getDataFromTree"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,kBAAvB;AACA,OAAOC,YAAP,MAAyB,cAAzB;AACA,SAASC,QAAT,QAAyB,WAAzB;AACA,SAASC,iBAAT,QAAkC,oBAAlC;;AAEA,SAASC,YAAT,OAAmC;AAAA,MAAXC,OAAW,QAAXA,OAAW;AACjC,SAAO,IAAIJ,YAAJ,CAAiB;AACtBK,IAAAA,GAAG,EAAE,OAAyCJ,QAAzC,GAAoDA,QADnC;AAEtBK,IAAAA,OAAO,EAAE,iBAAAC,SAAS,EAAI;AACpBA,MAAAA,SAAS,CAACC,UAAV,CAAqB;AACnBC,QAAAA,YAAY,EAAE;AACZC,UAAAA,WAAW,EAAE;AADD,SADK;AAInBN,QAAAA,OAAO,EAAPA;AAJmB,OAArB;AAMD,KATqB;AAWtB;AACAO,IAAAA,WAAW,EAAE;AACXC,MAAAA,SAAS,EAAE;AACTC,QAAAA,QAAQ,EAAE;AACRC,UAAAA,UADQ,sBACGC,CADH,EACMC,SADN,SAC4B;AAAA,gBAATC,KAAS,SAATA,KAAS;;AAClC;AADkC,mCAEbA,KAAK,CAACC,SAAN,CAAgB;AACnCC,cAAAA,KAAK,EAAEjB;AAD4B,aAAhB,CAFa;AAAA,gBAE1BkB,QAF0B,oBAE1BA,QAF0B,EAKlC;;;AACA,gBAAMC,IAAI,GAAG;AACXA,cAAAA,IAAI,EAAE;AAAED,gBAAAA,QAAQ,EAAE,CAACA;AAAb;AADK,aAAb;AAGAH,YAAAA,KAAK,CAACK,SAAN,CAAgBD,IAAhB;AACA,mBAAOA,IAAP;AACD;AAZO;AADD,OADA;AAkBXE,MAAAA,QAAQ,EAAE;AACRH,QAAAA,QAAQ,EAAE;AADF;AAlBC;AAZS,GAAjB,CAAP;AAmCD;;AAED,eAAerB,UAAU,CAACI,YAAD,EAAe;AAAEqB,EAAAA,eAAe,EAAE;AAAnB,CAAf,CAAzB","sourcesContent":["import withApollo from 'next-with-apollo';\nimport ApolloClient from 'apollo-boost';\nimport { endpoint } from '../config';\nimport { LOCAL_STATE_QUERY } from '../components/Cart';\n\nfunction createClient({ headers }) {\n  return new ApolloClient({\n    uri: process.env.NODE_ENV === 'development' ? endpoint : endpoint,\n    request: operation => {\n      operation.setContext({\n        fetchOptions: {\n          credentials: 'include',\n        },\n        headers,\n      });\n    },\n\n    // local data\n    clientState: {\n      resolvers: {\n        Mutation: {\n          toggleCart(_, variables, { cache }) {\n            // read the cartOpen value from the cache\n            const { cartOpen } = cache.readQuery({\n              query: LOCAL_STATE_QUERY,\n            });\n            // Write the cart State to the opposite\n            const data = {\n              data: { cartOpen: !cartOpen },\n            };\n            cache.writeData(data);\n            return data;\n          },\n        },\n      },\n\n      defaults: {\n        cartOpen: false,\n      },\n    },\n  });\n}\n\nexport default withApollo(createClient, { getDataFromTree: 'never' });\n"]},"metadata":{},"sourceType":"module"}