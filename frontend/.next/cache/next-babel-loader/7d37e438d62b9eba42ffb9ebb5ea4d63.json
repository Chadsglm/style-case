{"ast":null,"code":"import withApollo from 'next-with-apollo';\nimport ApolloClient from 'apollo-boost';\nimport { endpoint } from '../config';\nimport { LOCAL_STATE_QUERY } from '../components/Cart';\n\nfunction createClient({\n  headers\n}) {\n  return new ApolloClient({\n    uri: true ? endpoint : endpoint,\n    request: operation => {\n      operation.setContext({\n        fetchOptions: {\n          credentials: 'include'\n        },\n        headers\n      });\n    },\n    // local data\n    clientState: {\n      resolvers: {\n        Mutation: {\n          toggleCart(_, variables, {\n            cache\n          }) {\n            // read the cartOpen value from the cache\n            const {\n              cartOpen\n            } = cache.readQuery({\n              query: LOCAL_STATE_QUERY\n            }); // Write the cart State to the opposite\n\n            const data = {\n              data: {\n                cartOpen: !cartOpen\n              }\n            };\n            cache.writeData(data);\n            return data;\n          }\n\n        }\n      },\n      defaults: {\n        cartOpen: false\n      }\n    }\n  });\n}\n\nexport default withApollo(createClient, {\n  getDataFromTree: 'never'\n});","map":{"version":3,"sources":["/Users/cihadsaglam/wesbos/style-case/frontend/lib/withData.js"],"names":["withApollo","ApolloClient","endpoint","LOCAL_STATE_QUERY","createClient","headers","uri","request","operation","setContext","fetchOptions","credentials","clientState","resolvers","Mutation","toggleCart","_","variables","cache","cartOpen","readQuery","query","data","writeData","defaults","getDataFromTree"],"mappings":"AAAA,OAAOA,UAAP,MAAuB,kBAAvB;AACA,OAAOC,YAAP,MAAyB,cAAzB;AACA,SAASC,QAAT,QAAyB,WAAzB;AACA,SAASC,iBAAT,QAAkC,oBAAlC;;AAEA,SAASC,YAAT,CAAsB;AAAEC,EAAAA;AAAF,CAAtB,EAAmC;AACjC,SAAO,IAAIJ,YAAJ,CAAiB;AACtBK,IAAAA,GAAG,EAAE,OAAyCJ,QAAzC,GAAoDA,QADnC;AAEtBK,IAAAA,OAAO,EAAEC,SAAS,IAAI;AACpBA,MAAAA,SAAS,CAACC,UAAV,CAAqB;AACnBC,QAAAA,YAAY,EAAE;AACZC,UAAAA,WAAW,EAAE;AADD,SADK;AAInBN,QAAAA;AAJmB,OAArB;AAMD,KATqB;AAWtB;AACAO,IAAAA,WAAW,EAAE;AACXC,MAAAA,SAAS,EAAE;AACTC,QAAAA,QAAQ,EAAE;AACRC,UAAAA,UAAU,CAACC,CAAD,EAAIC,SAAJ,EAAe;AAAEC,YAAAA;AAAF,WAAf,EAA0B;AAClC;AACA,kBAAM;AAAEC,cAAAA;AAAF,gBAAeD,KAAK,CAACE,SAAN,CAAgB;AACnCC,cAAAA,KAAK,EAAElB;AAD4B,aAAhB,CAArB,CAFkC,CAKlC;;AACA,kBAAMmB,IAAI,GAAG;AACXA,cAAAA,IAAI,EAAE;AAAEH,gBAAAA,QAAQ,EAAE,CAACA;AAAb;AADK,aAAb;AAGAD,YAAAA,KAAK,CAACK,SAAN,CAAgBD,IAAhB;AACA,mBAAOA,IAAP;AACD;;AAZO;AADD,OADA;AAkBXE,MAAAA,QAAQ,EAAE;AACRL,QAAAA,QAAQ,EAAE;AADF;AAlBC;AAZS,GAAjB,CAAP;AAmCD;;AAED,eAAenB,UAAU,CAACI,YAAD,EAAe;AAAEqB,EAAAA,eAAe,EAAE;AAAnB,CAAf,CAAzB","sourcesContent":["import withApollo from 'next-with-apollo';\nimport ApolloClient from 'apollo-boost';\nimport { endpoint } from '../config';\nimport { LOCAL_STATE_QUERY } from '../components/Cart';\n\nfunction createClient({ headers }) {\n  return new ApolloClient({\n    uri: process.env.NODE_ENV === 'development' ? endpoint : endpoint,\n    request: operation => {\n      operation.setContext({\n        fetchOptions: {\n          credentials: 'include',\n        },\n        headers,\n      });\n    },\n\n    // local data\n    clientState: {\n      resolvers: {\n        Mutation: {\n          toggleCart(_, variables, { cache }) {\n            // read the cartOpen value from the cache\n            const { cartOpen } = cache.readQuery({\n              query: LOCAL_STATE_QUERY,\n            });\n            // Write the cart State to the opposite\n            const data = {\n              data: { cartOpen: !cartOpen },\n            };\n            cache.writeData(data);\n            return data;\n          },\n        },\n      },\n\n      defaults: {\n        cartOpen: false,\n      },\n    },\n  });\n}\n\nexport default withApollo(createClient, { getDataFromTree: 'never' });\n"]},"metadata":{},"sourceType":"module"}