{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/cihadsaglam/wesbos/style-case/frontend/components/TakeMyMoney.js\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation createOrder($token: String!) {\\n    createOrder(token: $token) {\\n      id\\n      charge\\n      total\\n      items {\\n        id\\n        title\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport StripeCheckout from 'react-stripe-checkout';\nimport { Mutation } from 'react-apollo';\nimport Router from 'next/router';\nimport NProgress from 'nprogress';\nimport PropTypes from 'prop-types';\nimport gql from 'graphql-tag';\nimport calcTotalPrice from '../lib/calcTotalPrice';\nimport Error from './ErrorMessage';\nimport User, { CURRENT_USER_QUERY } from './User';\nvar CREATE_ORDER_MUTATION = gql(_templateObject());\n\nfunction totalItems(cart) {\n  return cart.reduce(function (tally, cartItem) {\n    return tally + cartItem.quantity;\n  }, 0);\n}\n\nvar TakeMyMoney =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TakeMyMoney, _React$Component);\n\n  function TakeMyMoney() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, TakeMyMoney);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TakeMyMoney)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"onToken\", function _callee(res, createOrder) {\n      var order;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              NProgress.start();\n              console.log('On Token Called!');\n              console.log(res.id); // manually call the mutation once we have the stripe token\n\n              _context.next = 5;\n              return _regeneratorRuntime.awrap(createOrder({\n                variables: {\n                  token: res.id\n                }\n              })[\"catch\"](function (err) {\n                alert(err.message);\n              }));\n\n            case 5:\n              order = _context.sent;\n              Router.push({\n                pathname: '/order',\n                query: {\n                  id: order.data.createOrder.id\n                }\n              });\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(TakeMyMoney, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(User, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, function (_ref) {\n        var me = _ref.data.me;\n        return __jsx(Mutation, {\n          mutation: CREATE_ORDER_MUTATION,\n          refetchQueries: [{\n            query: CURRENT_USER_QUERY\n          }],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, function (createOrder) {\n          return __jsx(StripeCheckout, {\n            amount: calcTotalPrice(me.cart),\n            name: \"Style Case\",\n            description: \"Order of \".concat(totalItems(me.cart), \" items!\"),\n            image: me.cart.length && me.cart[0].item && me.cart[0].item.image,\n            stripeKey: \"pk_test_QaxgbzHm6jJJmZD3oG0KQSeH00rZyyyI9A\",\n            currency: \"EUR\",\n            email: me.email,\n            token: function token(res) {\n              return _this2.onToken(res, createOrder);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 62\n            },\n            __self: this\n          }, _this2.props.children);\n        });\n      });\n    }\n  }]);\n\n  return TakeMyMoney;\n}(React.Component);\n\nexport default TakeMyMoney;","map":{"version":3,"sources":["/Users/cihadsaglam/wesbos/style-case/frontend/components/TakeMyMoney.js"],"names":["React","StripeCheckout","Mutation","Router","NProgress","PropTypes","gql","calcTotalPrice","Error","User","CURRENT_USER_QUERY","CREATE_ORDER_MUTATION","totalItems","cart","reduce","tally","cartItem","quantity","TakeMyMoney","res","createOrder","start","console","log","id","variables","token","err","alert","message","order","push","pathname","query","data","me","length","item","image","email","onToken","props","children","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport StripeCheckout from 'react-stripe-checkout';\nimport { Mutation } from 'react-apollo';\nimport Router from 'next/router';\nimport NProgress from 'nprogress';\nimport PropTypes from 'prop-types';\nimport gql from 'graphql-tag';\nimport calcTotalPrice from '../lib/calcTotalPrice';\nimport Error from './ErrorMessage';\nimport User, { CURRENT_USER_QUERY } from './User';\n\nconst CREATE_ORDER_MUTATION = gql`\n  mutation createOrder($token: String!) {\n    createOrder(token: $token) {\n      id\n      charge\n      total\n      items {\n        id\n        title\n      }\n    }\n  }\n`;\n\nfunction totalItems(cart) {\n  return cart.reduce((tally, cartItem) => tally + cartItem.quantity, 0);\n}\n\nclass TakeMyMoney extends React.Component {\n  onToken = async (res, createOrder) => {\n    NProgress.start();\n    console.log('On Token Called!');\n    console.log(res.id);\n\n    // manually call the mutation once we have the stripe token\n    const order = await createOrder({\n      variables: {\n        token: res.id,\n      },\n    }).catch(err => {\n      alert(err.message);\n    });\n    \n    Router.push({\n      pathname: '/order',\n      query: { id: order.data.createOrder.id },\n    });\n  };\n\n  render() {\n    return (\n      <User>\n        {({ data: { me } }) => (\n          <Mutation\n            mutation={CREATE_ORDER_MUTATION}\n            refetchQueries={[{\n              query: CURRENT_USER_QUERY\n            }]}\n          >\n            {createOrder => (\n              <StripeCheckout\n                amount={calcTotalPrice(me.cart)}\n                name=\"Style Case\"\n                description={`Order of ${totalItems(me.cart)} items!`}\n                image={me.cart.length && me.cart[0].item && me.cart[0].item.image}\n                stripeKey=\"pk_test_QaxgbzHm6jJJmZD3oG0KQSeH00rZyyyI9A\"\n                currency=\"EUR\"\n                email={me.email}\n                token={res => this.onToken(res, createOrder)}\n              >\n                {this.props.children}\n              </StripeCheckout>\n            )}\n          </Mutation>\n        )}\n      </User>\n    );\n  }\n}\n\nexport default TakeMyMoney;"]},"metadata":{},"sourceType":"module"}