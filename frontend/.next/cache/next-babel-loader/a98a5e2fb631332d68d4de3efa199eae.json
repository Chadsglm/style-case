{"ast":null,"code":"import _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport StripeCheckout from 'react-stripe-checkout';\nimport { Mutation } from 'react-apollo';\nimport Router from 'next/router';\nimport NProgress from 'nprogress';\nimport gql from 'graphql-tag';\nimport calcTotalPrice from '../lib/calcTotalPrice';\nimport Error from './ErrorMessage';\nimport User, { CURRENT_USER_QUERY } from './User';\nconst CREATE_ORDER_MUTATION = gql`\n  mutation createOrder($token: String!) {\n    createOrder(token: $token) {\n      id\n      charge\n      total\n      items {\n        id\n        title\n      }\n    }\n  }\n`;\n\nfunction totalItems(cart) {\n  return cart.reduce((tally, cartItem) => tally + cartItem.quantity, 0);\n}\n\nclass TakeMyMoney extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"onToken\", async (res, createOrder) => {\n      NProgress.start();\n      console.log('On Token Called!');\n      console.log(res.id); // manually call the mutation once we have the stripe token\n\n      const order = await createOrder({\n        variables: {\n          token: res.id\n        }\n      }).catch(err => {\n        alert(err.message);\n      });\n      Router.push({\n        pathname: '/order',\n        query: {\n          id: order.data.createOrder.id\n        }\n      });\n    });\n  }\n\n  render() {\n    return __jsx(User, null, ({\n      data: {\n        me\n      }\n    }) => __jsx(Mutation, {\n      mutation: CREATE_ORDER_MUTATION,\n      refetchQueries: [{\n        query: CURRENT_USER_QUERY\n      }]\n    }, createOrder => __jsx(StripeCheckout, {\n      amount: calcTotalPrice(me.cart),\n      name: \"Style Case\",\n      description: `Order of ${totalItems(me.cart)} items!`,\n      image: me.cart.length && me.cart[0].item && me.cart[0].item.image,\n      stripeKey: \"pk_test_QaxgbzHm6jJJmZD3oG0KQSeH00rZyyyI9A\",\n      currency: \"EUR\",\n      email: me.email,\n      token: res => this.onToken(res, createOrder)\n    }, this.props.children)));\n  }\n\n}\n\nexport default TakeMyMoney;","map":null,"metadata":{},"sourceType":"module"}