{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/cihadsaglam/wesbos/style-case/frontend/components/OrderList.js\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query USER_ORDERS_QUERY {\\n    orders(orderBy: createdAt_DESC) {\\n      id\\n      total\\n      createdAt\\n      items {\\n        id\\n        title\\n        price\\n        description\\n        quantity\\n        image\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport { Query } from 'react-apollo';\nimport { formatDistance } from 'date-fns';\nimport Link from 'next/link';\nimport styled from 'styled-components';\nimport gql from 'graphql-tag';\nimport Error from './ErrorMessage';\nimport formatMoney from '../lib/formatMoney';\nimport OrderItemStyles from './styles/OrderItemStyles';\nvar USER_ORDERS_QUERY = gql(_templateObject());\nvar orderUl = styled.ul.withConfig({\n  displayName: \"OrderList__orderUl\",\n  componentId: \"sc-7em6xg-0\"\n})([\"display:grid;grid-gap:4rem;grid-template-columns:repeat(auto-fit,minmax(40%,1fr));\"]);\n\nvar OrderList =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(OrderList, _React$Component);\n\n  function OrderList() {\n    _classCallCheck(this, OrderList);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(OrderList).apply(this, arguments));\n  }\n\n  _createClass(OrderList, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(Query, {\n        query: USER_ORDERS_QUERY,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, function (_ref) {\n        var orders = _ref.data.orders,\n            loading = _ref.loading,\n            error = _ref.error;\n        if (loading) return __jsx(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 40\n          },\n          __self: this\n        }, \"loading...\");\n        if (error) return __jsx(Error, {\n          erorr: error,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        });\n        console.log(orders);\n        return __jsx(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        }, __jsx(\"h2\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }, \"You have \", orders.length, \" orders\"), __jsx(\"orderUl\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }, orders.map(function (order) {\n          return __jsx(OrderItemStyles, {\n            key: order.id,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 48\n            },\n            __self: this\n          }, __jsx(Link, {\n            href: {\n              pathname: '/order',\n              query: {\n                id: order.id\n              }\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 49\n            },\n            __self: this\n          }, __jsx(\"a\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 55\n            },\n            __self: this\n          }, __jsx(\"div\", {\n            className: \"order-meta\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 56\n            },\n            __self: this\n          }, __jsx(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 57\n            },\n            __self: this\n          }, order.items.reduce(function (a, b) {\n            return a + b.quantity;\n          }, 0), \" Items\"), __jsx(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 58\n            },\n            __self: this\n          }, order.items.length, \" Products\"), __jsx(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 59\n            },\n            __self: this\n          }, order.createdAt), __jsx(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 60\n            },\n            __self: this\n          }, formatMoney(order.total))), __jsx(\"div\", {\n            className: \"images\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 62\n            },\n            __self: this\n          }, order.items.map(function (item) {\n            return __jsx(\"img\", {\n              key: item.id,\n              src: item.image,\n              alt: item.title,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 64\n              },\n              __self: this\n            });\n          })))));\n        })));\n      });\n    }\n  }]);\n\n  return OrderList;\n}(React.Component);\n\nexport default OrderList;","map":{"version":3,"sources":["/Users/cihadsaglam/wesbos/style-case/frontend/components/OrderList.js"],"names":["React","Query","formatDistance","Link","styled","gql","Error","formatMoney","OrderItemStyles","USER_ORDERS_QUERY","orderUl","ul","OrderList","orders","data","loading","error","console","log","length","map","order","id","pathname","query","items","reduce","a","b","quantity","createdAt","total","item","image","title","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Query } from 'react-apollo';\nimport { formatDistance } from 'date-fns';\nimport Link from 'next/link';\nimport styled from 'styled-components';\nimport gql from 'graphql-tag';\nimport Error from './ErrorMessage';\nimport formatMoney from '../lib/formatMoney';\nimport OrderItemStyles from './styles/OrderItemStyles';\n\nconst USER_ORDERS_QUERY = gql`\n  query USER_ORDERS_QUERY {\n    orders(orderBy: createdAt_DESC) {\n      id\n      total\n      createdAt\n      items {\n        id\n        title\n        price\n        description\n        quantity\n        image\n      }\n    }\n  }\n`;\n\nconst orderUl = styled.ul`\n  display: grid;\n  grid-gap: 4rem;\n  grid-template-columns: repeat(auto-fit, minmax(40%, 1fr));\n`;\n\nclass OrderList extends React.Component {\n  render() {\n    return (\n      <Query query={USER_ORDERS_QUERY}>\n        {({ data: { orders }, loading, error }) => {\n          if (loading) return <p>loading...</p>;\n          if (error) return <Error erorr={error} />;\n          console.log(orders);\n          return (\n            <div>\n              <h2>You have {orders.length} orders</h2>\n              <orderUl>\n                {orders.map(order => (\n                  <OrderItemStyles key={order.id}>\n                    <Link\n                      href={{\n                        pathname: '/order',\n                        query: { id: order.id },\n                      }}\n                    >\n                      <a>\n                        <div className=\"order-meta\">\n                          <p>{order.items.reduce((a, b) => a + b.quantity, 0)} Items</p>\n                          <p>{order.items.length} Products</p>\n                          <p>{order.createdAt}</p>\n                          <p>{formatMoney(order.total)}</p>\n                        </div>\n                        <div className=\"images\">\n                          {order.items.map(item => (\n                            <img key={item.id} src={item.image} alt={item.title} />\n                          ))}\n                        </div>\n                      </a>\n                    </Link>\n                  </OrderItemStyles>\n                ))}\n              </orderUl>\n            </div>\n          );\n        }}\n      </Query>\n    );\n  }\n}\n\nexport default OrderList;"]},"metadata":{},"sourceType":"module"}