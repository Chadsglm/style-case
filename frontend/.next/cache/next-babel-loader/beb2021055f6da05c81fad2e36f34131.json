{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation removeFromCart($id: ID!) {\\n    removeFromCart(id: $id) {\\n      id\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport { Mutation } from 'react-apollo';\nimport styled from 'styled-components';\nimport gql from 'graphql-tag';\nimport { CURRENT_USER_QUERY } from './User';\nvar REMOVE_FROM_CART_MUTATION = gql(_templateObject());\nvar BigButton = styled.button.withConfig({\n  displayName: \"RemoveFromCart__BigButton\",\n  componentId: \"sc-1fmc10-0\"\n})([\"font-size:3rem;background:none;border:0;&:hover{color:\", \";cursor:pointer;}\"], function (props) {\n  return props.theme.red;\n});\n\nvar RemoveFromCart =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(RemoveFromCart, _React$Component);\n\n  function RemoveFromCart() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, RemoveFromCart);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(RemoveFromCart)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"update\", function (cache, payload) {\n      console.log('Running remove from cart update fn'); // 1. first read the cache\n\n      var data = cache.readQuery({\n        query: CURRENT_USER_QUERY\n      });\n      console.log(data); // 2. remove that item from the cart\n\n      var cartItemId = payload.data.removeFromCart.id;\n      data.me.cart = data.me.cart.filter(function (cartItem) {\n        return cartItem.id !== cartItemId;\n      }); // 3. write it back to the cache\n\n      cache.writeQuery({\n        query: CURRENT_USER_QUERY,\n        data: data\n      });\n    });\n\n    return _this;\n  }\n\n  _createClass(RemoveFromCart, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(Mutation, {\n        mutation: REMOVE_FROM_CART_MUTATION,\n        variables: {\n          id: this.props.id\n        },\n        update: this.update,\n        optimisticResponse: {\n          __typename: 'Mutation',\n          removeFromCart: {\n            __typename: 'CartItem',\n            id: this.props.id\n          }\n        }\n      }, function (removeFromCart, _ref) {\n        var loading = _ref.loading,\n            error = _ref.error;\n        return __jsx(BigButton, {\n          disabled: loading,\n          onClick: function onClick() {\n            removeFromCart()[\"catch\"](function (err) {\n              return alert(err.message);\n            });\n          },\n          title: \"Delete Item\"\n        }, \"\\xD7\");\n      });\n    }\n  }]);\n\n  return RemoveFromCart;\n}(React.Component);\n\nexport default RemoveFromCart;","map":null,"metadata":{},"sourceType":"module"}